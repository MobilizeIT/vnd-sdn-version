<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 borderStyle="solid" borderThickness="0" buttonMode="true" cornerRadius="100"
		 creationComplete="second()" creationPolicy="all"
		 horizontalAlign="center" horizontalScrollPolicy="off" letterSpacing="0" textAlign="center"
		 verticalAlign="middle" verticalGap="0" verticalScrollPolicy="off">
	<mx:Zoom id="zoomAll" zoomHeightFrom="1" zoomHeightTo="2.5" zoomWidthFrom="1" zoomWidthTo="2.5"/>
	
	<mx:Metadata>
		[Event(name="defaultMoveEve")]
	</mx:Metadata>
	<mx:Metadata>
		[Event(name="defaultMoveEve1")]
	</mx:Metadata>
	<mx:Metadata>
		[Event(name="defaultDownEve")]
	</mx:Metadata>
	<mx:Metadata>
		[Event(name="ChangedDownEveForComponent")]
	</mx:Metadata>
	<mx:Metadata>
		[Event(name="ChangedUpEveForComponent")]
	</mx:Metadata>
	<mx:Zoom id="myZoom" target="{this}" zoomHeightFrom="1.00" zoomHeightTo="2.50"
			 zoomWidthFrom="1.00" zoomWidthTo="2.50"/>
	<mx:Script>
		<![CDATA[
			import action_alert.HAlert;
			import action_alert.HMensagens;			
			import mx.collections.ArrayCollection;
			import mx.containers.Form;
			import mx.containers.FormItem;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.controls.ComboBox;
			import mx.controls.Label;
			import mx.controls.RadioButton;
			import mx.controls.RadioButtonGroup;
			import mx.controls.Text;
			import mx.controls.TextInput;
			import mx.events.FlexEvent;
			import flash.display.Sprite;
			import mx.core.UIComponent;

			public var contClick:int=0;
			public var listNumberOfInterfaces:Array = new Array();
			public var circle:Sprite = new Sprite();
			public var c:UIComponent = new UIComponent();			
			public var valofcomboswitch:String;
			public var valofcomboopenflowversion:String;
			public var valofcombochannel:String;
			public var valofcombomode:String;
			public var valofcombocomputermask:String;
			public var valofremoteLocal:String;
			public var valofcomboopenflowcontroller:String;
			public var valofcombosetstripvlan:String;
			public var valofcombosetstripvlan1:String;
			public var valofcomboipdestination:String;
			public var valofcomboipsource:String;
			public var valofcombosetipdestination:String;
			public var valofcombosetipsource:String;
			public var valofcombovlanid:String;
			public var valofcombovlanid1:String;
			public var valofcombomacswitch:String;
			public var valofcombosetvlanid:String;
			public var valofcombosetvlanid1:String;
			public var valofcombomacdestination:String;
			public var valofcombomacsource:String;
			public var valofcombosetmacdestination:String;
			public var valofcombosetmacsource:String;
			public var valofcombo:String;
			public var checkifcontrollerpenflow:Boolean = false;
			public var changesObj:HBox = new HBox();
			public var butAppChanges:Button=new Button();
			public var boxViewer:TextInput=new TextInput();
			public var regular:int=2;			
			public var flowtab:int=0;	
			public var ncount:int=0;
			private var cont:int;
			private var word:Text;
			private var j:int;
			private var tb3:ComboBox;
			private var radioButton:RadioButtonGroup;
			private var rb:RadioButton = new RadioButton();
			private var ab:int;
			private var testa:Boolean=false;
			private var checkMac:Boolean=false;
			private var checkIp:Boolean=false;
			private var confirmUpt:Boolean=false;			
			public var exportControll:Boolean=false;			
			public var aa:int=0;
			public var type:String;
			public var wirelessExists:Boolean=false;
			public var nid:int;
			public var range:int=0;	
			public var iface:int=0;
			public var secondTime:Boolean;
			public var linesStartingArray:ArrayCollection=new ArrayCollection();
			public var linesEndingArray:ArrayCollection=new ArrayCollection();
			public var objparaArrayCol:ArrayCollection=new ArrayCollection();
			public var valueObjArr:ArrayCollection=new ArrayCollection();	
			
			[Bindable] public var countNumber:int=1;
			[Bindable] public var test:String;
			[Bindable] public var form:Form=new Form();
			[Bindable] public var rec:Rectangle;
			[Bindable] public var img:String;
			[Bindable] public var isfocused:Boolean;			
			[Bindable] public var instancArray:ArrayCollection=new ArrayCollection();
					
			public function setFoc():void {
				if (this.type != "Station" && this.type != "Access Point"){
					this.setStyle('backgroundColor',"#000000");
					this.setStyle('backgroundAlpha',"0.1");
				}
			}
			
			public function removeFoc():void {
					this.setStyle('backgroundColor',null);
					this.setStyle('backgroundAlpha',"1");
			}	
			
			public function change(eve:Event):void {
				var bool:Boolean=false;
				var obj:ChangedTemp=new ChangedTemp();
				
				if(eve.target.parent.label=="Controller IP Address")
					obj.id="controllerIPAddress";
				else if(eve.target.parent.label=="IP Address")
					obj.id="IPAddress";
				else if(eve.target.parent.label=="MAC Address")
					obj.id="MacAddress";
				else if(eve.target.parent.label=="Mask")
					obj.id="mask";
				else if(eve.target.parent.label=="Number of Wireless Interfaces")
					obj.id="numberofradios";
				else if(eve.target.parent.label=="Controller Port")
					obj.id="controllerPort";
				else if(eve.target.parent.label=="Destination IP")
					obj.id="ipDestination";
				else if(eve.target.parent.label=="Destination MAC")
					obj.id="macDestination";
				else if(eve.target.parent.label=="Destination TCP/UDP Port")
					obj.id="destinationPort";
				else if(eve.target.parent.label=="Flow Name")
					obj.id="flowName";
				else if(eve.target.parent.label=="Ingress Port")
					obj.id="ingressPort";
				else if(eve.target.parent.label=="Openflow Controller")
					obj.id="openflowController";
				else if(eve.target.parent.label=="Priority")
					obj.id="priority";
				else if(eve.target.parent.label=="Set TOS")
					obj.id="setTOS";
				else if(eve.target.parent.label=="Set Destination IP")
					obj.id="setIPDestination";
				else if(eve.target.parent.label=="Set Destination MAC")
					obj.id="setMACDestination";
				else if(eve.target.parent.label=="Set Destination TCP/UDP Port")
					obj.id="setDestinationPort";
				else if(eve.target.parent.label=="Set Enqueue")
					obj.id="setEnqueue";
				else if(eve.target.parent.label=="Set Output")
					obj.id="setOutput";
				else if(eve.target.parent.label=="Set Source IP")
					obj.id="setIPSource";
				else if(eve.target.parent.label=="Set Source MAC")
					obj.id="setMACSource";
				else if(eve.target.parent.label=="Set Source TCP/UDP Port")
					obj.id="setSourcePort";
				else if(eve.target.parent.label=="Set Strip Vlan")
					obj.id="setStripVlan";
				else if(eve.target.parent.label=="Set Vlan Priority")
					obj.id="setVLANPriority";
				else if(eve.target.parent.label=="Set Vlan ID")
					obj.id="setVlanID";
				else if(eve.target.parent.label=="Remote Controller")
					obj.id="remoteLocal";
				else if(eve.target.parent.label=="Switch")
					obj.id="switch";
				else if(eve.target.parent.label=="OpenFlow Version")
					obj.id="ofp_version";
				else if(eve.target.parent.label=="Channel")
					obj.id="channel";
				else if(eve.target.parent.label=="Mode")
					obj.id="mode";
				else if(eve.target.parent.label=="Listening Port")
					obj.id="listeningPort";	
				else if(eve.target.parent.label=="Signal Range")
					obj.id="signalRange";
				else if(eve.target.parent.label=="SSID")
					obj.id="ssid";
				else if(eve.target.parent.label=="Switch MAC Address")
					obj.id="macSwitch";
				else if(eve.target.parent.label=="Source IP")
					obj.id="ipSource";
				else if(eve.target.parent.label=="Source MAC")
					obj.id="macSource";						
				else if(eve.target.parent.label=="Source TCP/UDP Port")
					obj.id="sourcePort";
				else if(eve.target.parent.label=="Vlan ID")
					obj.id="vlanID";
				else if(eve.target.parent.label=="Vlan Priority")
					obj.id="vlanPriority";	
				else if(eve.target.parent.label=="TOS")
					obj.id="tos";	
				else if(eve.target.parent.label=="Ethernet Type")
					obj.id="ethtype";	
				else if(eve.target.parent.label=="Protocol Number")
					obj.id="protocol";					
				else
					obj.id=eve.target.parent.label;
				
				if(eve.target.className=='TextInput'){
					obj.name=eve.target.text;
					if(obj.id=='name'){
						test=eve.target.text;
					}
				}	
				
				if(eve.target.className=='RadioButton'){
					if(obj.id=="remoteLocal"){
						valofremoteLocal=eve.target.selected;
					}
				}
				
				if(eve.target.className=='ComboBox'){
					if(obj.id=="vlanID")
						valofcombovlanid=eve.target.selectedItem;
					else if(obj.id=="setVlanID")
						valofcombosetvlanid=eve.target.selectedItem;
					else if(obj.id=="macSource")
						valofcombomacsource=eve.target.selectedItem;
					else if(obj.id=="macDestination")
						valofcombomacdestination=eve.target.selectedItem;
					else if(obj.id=="macSwitch")
						valofcombomacswitch=eve.target.selectedItem;
					else if(obj.id=="setMACSource")
						valofcombosetmacsource=eve.target.selectedItem;					
					else if(obj.id=="setMACDestination")
						valofcombosetmacdestination=eve.target.selectedItem;
					else if(obj.id=="ipDestination")
						valofcomboipdestination=eve.target.selectedItem;
					else if(obj.id=="ipSource")
						valofcomboipsource=eve.target.selectedItem;
					else if(obj.id=="setIPSource")
						valofcombosetipsource=eve.target.selectedItem;
					else if(obj.id=="setIPDestination")
						valofcombosetipdestination=eve.target.selectedItem;
					else if(obj.id=="setStripVlan")
						valofcombosetstripvlan=eve.target.selectedItem;
					else if(obj.id=="openflowController")
						valofcomboopenflowcontroller=eve.target.selectedItem;
					else if(obj.id=="ofp_version")
						valofcomboopenflowversion=eve.target.selectedItem;
					else if(obj.id=="channel")
						valofcombochannel=eve.target.selectedItem;
					else if(obj.id=="mode")
						valofcombomode=eve.target.selectedItem;
					else if(obj.id=="mask")
						valofcombocomputermask=eve.target.selectedItem;
					else if(obj.id=="switch")
						valofcomboswitch=eve.target.selectedItem;
					else
						valofcombo=eve.target.selectedItem;
					
					obj.name=eve.target.selectedIndex;
					obj.IsCombo=true;
					obj.combeValue=eve.target.value.toString()	
				}				
				for(j=0;j<valueObjArr.length;j++){
					if(valueObjArr[j].id==obj.id){
						bool=true;						
						valueObjArr[j].haschanged=true;							
						valueObjArr[j].name=obj.name;
						valueObjArr[j].combeValue=obj.combeValue;
						break;
					}
				}				
				if(!bool){
					obj.haschanged=true
					valueObjArr.addItem(obj);
				}
			} 			
			
			public function second():void {			
				if(secondTime){	
					form=new Form();
					
					if(this.id=="Switch"){
						var checkifswitchopenflow:Boolean=true;
						ab = int(this.name.slice(7,9));
						this.type = "Switch";
						this.nid = ab;
					}
					else if(this.id=="Access Point"){
						checkifswitchopenflow=true;
						ab = int(this.name.slice(13,15));
						this.type = "Access Point";
						this.nid = ab;
					}
					else if(this.id=="Computer"){
						var checkifcomputer:Boolean=true;
						ab = int(this.name.slice(9,11));
						this.type = "Computer";
						this.nid = ab;
					}
					else if(this.id=="Car"){
						var checkifcar:Boolean=true;
						ab = int(this.name.slice(4,6));
						this.type = "Car";
						this.nid = ab;
					}
					else if(this.id=="Station"){
						var checkifstation:Boolean=true;
						ab = int(this.name.slice(8,10));
						this.type = "Station";
						this.nid = ab;
					}
					else if(this.id=="Controller"){
						ab = int(this.name.slice(11,13));
						this.type = "Controller";
						this.nid = ab;
						if(exportControll==true){
							aa=0;
							ncount=0;
							countNumber=1;
							regular=2;
							var nn:int=0;
							for(var iy:int=0;iy<(objparaArrayCol.length);iy++){
								var obj:objParameter=objparaArrayCol[iy];
								if(obj.id=='array'){
									for(var jjo:int=0;jjo<valueObjArr.length;jjo++){									
										if(obj.name=="flowName" && obj.name==valueObjArr[jjo].id)
											nn++;										
									}
								}
							}							
						}
					}					
					if(exportControll==true && (ncount<(aa-1) || (aa==0))){
						aa=nn+1;
					}
						
					else if(exportControll==true && ncount>=aa){
						aa=1;
					}
					else
						aa=1;
					for(var r:int=0;r<aa;r++){
						form=new Form();
						this.can.removeChildAt(1); 
						this.can.addChildAt(form,1);
						
						for(var i:int=0;i<(objparaArrayCol.length);i++){
							obj=objparaArrayCol[i];
							
							if(obj.id=='array'){	
								var frmItem:FormItem = new FormItem();
								frmItem.direction = "horizontal";
								frmItem.label = obj.name;
								var tb:TextInput = new TextInput();
								
								for(j=0;j<valueObjArr.length;j++){
									if(obj.name==valueObjArr[j].id){
										tb.text = valueObjArr[j].name;
										valueObjArr[j].name="";
										if(exportControll==true && ncount<(aa-1)){
											valueObjArr.removeItemAt(j);
										}
										break;
									}
								}
								if(r==(aa-1) && aa!=1){
									exportControll=false;
									flowtab=1;
								}
								
								if(obj.name=="flowName"&&checkifcontrollerpenflow==false&&exportControll!=true){								
									var butFlowTab:Button = new Button();								
									changesObj = new HBox();
									word = new Text();
									
									if(flowtab==1)
										butFlowTab.enabled=false;
									
									butAppChanges.label = "Apply Settings";
									butAppChanges.addEventListener(MouseEvent.CLICK, appchangesobj);
									changesObj.addChild(butAppChanges);
									
									butFlowTab.label = "Create Flow Table";
									butFlowTab.addEventListener(MouseEvent.CLICK, dispFlowtab);
									changesObj.addChild(butFlowTab);
									
									changesObj.setStyle("horizontalAlign","center");
									changesObj.percentWidth=100;
									form.addChild(changesObj);		
								}	
								
								if(flowtab==1||exportControll==true){
									if(obj.name=="flowName"){
										tb.width=100;		
										frmItem.label = "Flow Name";
										if(exportControll==true){
											if(ncount<(aa-1)){		
												countNumber=r+1;	
												obj.flowName[countNumber-1]=tb.text;
											}
										}
										testa=false;
										if(regular==1){
											if(tb.text==""&&(obj.flowName[countNumber-1]==""||obj.flowName[countNumber-1]==undefined)){
												testa=true;
												regular=2;
												HAlert.erro(HMensagens.Slice);
											}																	
											else if(countNumber-1!=obj.flowName.length){	
												if(tb.text!=obj.flowName[countNumber-1]&&tb.text!=""){											
													for(cont = 0; cont<countNumber;cont++){
														if (tb.text==obj.flowName[cont] || obj.flowName[cont]==""){
															testa=true;
															tb.text="";
															regular=2;
															HAlert.erro(HMensagens.Slice);
														}
													}
													if(testa!=true){
														obj.flowName[countNumber-1]=tb.text;
													}
												}										
												tb.text=obj.flowName[countNumber];
												testa=true;
												boxViewer.text=String(countNumber++);
											}											
											else if(tb.text!="" && countNumber-1==obj.flowName.length){
												for(cont = 0; cont<countNumber;cont++){
													if (tb.text==obj.flowName[cont] || obj.flowName[cont]==""){
														testa=true;
														tb.text="";
														regular=2;
														HAlert.erro(HMensagens.Slice);
													}
												}
											}
											if(testa==false){
												obj.flowName[countNumber-1]=tb.text;
												tb.text="";
												boxViewer.text=String(countNumber++);
											}
										}									
										else if(regular==0){
											if(testa!=true&&tb.text!=""&&obj.flowName[countNumber-1]!=tb.text){
												obj.flowName[countNumber-1]=tb.text;
											}
											boxViewer.text=String(countNumber--);
											tb.text=obj.flowName[countNumber-1];
										}
										else
											tb.text=obj.flowName[countNumber-1];
										
										var buttonGo:Button = new Button();
										var butAppChanges:Button = new Button();
										var buttonBack:Button = new Button();
										var contein2:HBox = new HBox();
										var contein1:HBox = new HBox();
										var changesObj:HBox = new HBox();
										word = new Text();								
										
										word.text = "--- Flow Table ---";
										word.setStyle("fontSize", "16");
										word.setStyle("textAlign", "right");
										
										if (countNumber == 1)
											buttonBack.enabled=false;
										
										boxViewer.width=30;
										boxViewer.editable=false;
										boxViewer.text=String(countNumber);
										buttonGo.label = ">"
										buttonGo.addEventListener(MouseEvent.CLICK, clickGo);
										buttonBack.label = "<"
										buttonBack.addEventListener(MouseEvent.CLICK, clickBack);
										contein1.addChild(word);
										contein2.addChild(buttonBack);
										contein2.addChild(boxViewer);
										contein2.addChild(buttonGo);
										contein2.setStyle("horizontalAlign","center");
										contein1.setStyle("horizontalAlign","center");
										contein2.percentWidth=100;							
										contein1.percentWidth=100;
										form.addChild(contein1);
										form.addChild(contein2);
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);								
									}
										
									else if(obj.name=="priority"){
										tb.width=50;
										frmItem.label = "Priority";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.priority[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.priority.length){		
												if(obj.priority[countNumber-2]==""||tb.text!=""){
													obj.priority[countNumber-2]=tb.text;
												}
												tb.text=obj.priority[countNumber-1];
											}										
											else if(countNumber-2==obj.priority.length){
												obj.priority[countNumber-2]=tb.text;									
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.priority[countNumber]!=tb.text){
												obj.priority[countNumber]=tb.text;
											}
											tb.text=obj.priority[countNumber-1];
										}
										else
											tb.text=obj.priority[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="tos"){
										tb.width=50;
										frmItem.label = "TOS";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.TOS[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.TOS.length){	
												if(obj.TOS[countNumber-2]==""||tb.text!=""){
													obj.TOS[countNumber-2]=tb.text;	
												}
												tb.text=obj.TOS[countNumber-1];
											}										
											else if(countNumber-2==obj.TOS.length){
												obj.TOS[countNumber-2]=tb.text;									
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.TOS[countNumber]!=tb.text){
												obj.TOS[countNumber]=tb.text;
											}
											tb.text=obj.TOS[countNumber-1];
										}									
										else
											tb.text=obj.TOS[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="setTOS"){
										tb.width=50;
										frmItem.label = "Set TOS";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.setTOS[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.setTOS.length){	
												if(obj.setTOS[countNumber-2]==""||tb.text!=""){
													obj.setTOS[countNumber-2]=tb.text;		
												}
												tb.text=obj.setTOS[countNumber-1];
											}										
											else if(countNumber-2==obj.setTOS.length){
												obj.setTOS[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.setTOS[countNumber]!=tb.text){
												obj.setTOS[countNumber]=tb.text;
											}
											tb.text=obj.setTOS[countNumber-1];
										}									
										else
											tb.text=obj.setTOS[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="ethtype"){
										tb.width=50;
										frmItem.label = "Ethernet Type";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.ethType[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.ethType.length){	
												if(obj.ethType[countNumber-2]==""||tb.text!=""){
													obj.ethType[countNumber-2]=tb.text;		
												}
												tb.text=obj.ethType[countNumber-1];
											}										
											else if(countNumber-2==obj.ethType.length){
												obj.ethType[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.ethType[countNumber]!=tb.text){
												obj.ethType[countNumber]=tb.text;
											}
											tb.text=obj.ethType[countNumber-1];
										}									
										else
											tb.text=obj.ethType[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="protocol"){
										tb.width=50;
										frmItem.label = "Protocol Number";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.protocol[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.protocol.length){	
												if(obj.protocol[countNumber-2]==""||tb.text!=""){
													obj.protocol[countNumber-2]=tb.text;		
												}
												tb.text=obj.protocol[countNumber-1];
											}										
											else if(countNumber-2==obj.protocol.length){
												obj.protocol[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.protocol[countNumber]!=tb.text){
												obj.protocol[countNumber]=tb.text;
											}
											tb.text=obj.protocol[countNumber-1];
										}									
										else
											tb.text=obj.protocol[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="ingressPort"){
										tb.width=50;
										frmItem.label = "Ingress Port";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.ingressPort[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.ingressPort.length){	
												if(obj.ingressPort[countNumber-2]==""||tb.text!=""){
													obj.ingressPort[countNumber-2]=tb.text;		
												}
												tb.text=obj.ingressPort[countNumber-1];
											}										
											else if(countNumber-2==obj.ingressPort.length){
												obj.ingressPort[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.ingressPort[countNumber]!=tb.text){
												obj.ingressPort[countNumber]=tb.text;
											}
											tb.text=obj.ingressPort[countNumber-1];
										}									
										else
											tb.text=obj.ingressPort[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}																						
									else if(obj.name=="setSourcePort"){
										tb.width=50;
										frmItem.label = "Set Source TCP/UDP Port";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.setSourcePort[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.setSourcePort.length){	
												if(obj.setSourcePort[countNumber-2]==""||tb.text!=""){
													obj.setSourcePort[countNumber-2]=tb.text;		
												}
												tb.text=obj.setSourcePort[countNumber-1];
											}										
											else if(countNumber-2==obj.setSourcePort.length){
												obj.setSourcePort[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.setSourcePort[countNumber]!=tb.text){
												obj.setSourcePort[countNumber]=tb.text;
											}
											tb.text=obj.setSourcePort[countNumber-1];
										}									
										else
											tb.text=obj.setSourcePort[countNumber-1];
						
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}									
									else if(obj.name=="setDestinationPort"){
										tb.width=50;
										frmItem.label = "Set Destination TCP/UDP Port";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.setDestinationPort[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.setDestinationPort.length){	
												if(obj.setDestinationPort[countNumber-2]==""||tb.text!=""){
													obj.setDestinationPort[countNumber-2]=tb.text;		
												}
												tb.text=obj.setDestinationPort[countNumber-1];
											}										
											else if(countNumber-2==obj.setDestinationPort.length){
												obj.setDestinationPort[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.setDestinationPort[countNumber]!=tb.text){
												obj.setDestinationPort[countNumber]=tb.text;
											}
											tb.text=obj.setDestinationPort[countNumber-1];
										}									
										else
											tb.text=obj.setDestinationPort[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="setVLANPriority"){
										tb.width=50;
										frmItem.label = "Set Vlan Priority";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.setVLANPriority[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.setVLANPriority.length){	
												if(obj.setVLANPriority[countNumber-2]==""||tb.text!=""){
													obj.setVLANPriority[countNumber-2]=tb.text;		
												}
												tb.text=obj.setVLANPriority[countNumber-1];
											}										
											else if(countNumber-2==obj.setVLANPriority.length){
												obj.setVLANPriority[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.setVLANPriority[countNumber]!=tb.text){
												obj.setVLANPriority[countNumber]=tb.text;
											}
											tb.text=obj.setVLANPriority[countNumber-1];
										}									
										else
											tb.text=obj.setVLANPriority[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="vlanPriority"){
										tb.width=50;
										frmItem.label = "Vlan Priority";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.vlanPriority[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.vlanPriority.length){	
												if(obj.vlanPriority[countNumber-2]==""||tb.text!=""){
													obj.vlanPriority[countNumber-2]=tb.text;		
												}
												tb.text=obj.vlanPriority[countNumber-1];
											}										
											else if(countNumber-2==obj.vlanPriority.length){
												obj.vlanPriority[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.vlanPriority[countNumber]!=tb.text){
												obj.vlanPriority[countNumber]=tb.text;
											}
											tb.text=obj.vlanPriority[countNumber-1];
										}									
										else
											tb.text=obj.vlanPriority[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="setEnqueue"){
										tb.width=50;
										frmItem.label = "Set Enqueue";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.setEnqueue[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.setEnqueue.length){	
												if(obj.setEnqueue[countNumber-2]==""||tb.text!=""){
													obj.setEnqueue[countNumber-2]=tb.text;		
												}
												tb.text=obj.setEnqueue[countNumber-1];
											}										
											else if(countNumber-2==obj.setEnqueue.length){
												obj.setEnqueue[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.setEnqueue[countNumber]!=tb.text){
												obj.setEnqueue[countNumber]=tb.text;
											}
											tb.text=obj.setEnqueue[countNumber-1];
										}									
										else
											tb.text=obj.setEnqueue[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="setOutput"){
										tb.width=50;
										frmItem.label = "Set Output";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.setOutput[countNumber-1]=tb.text;										
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.setOutput.length){	
												if(obj.setOutput[countNumber-2]==""||tb.text!=""){
													obj.setOutput[countNumber-2]=tb.text;		
												}
												tb.text=obj.setOutput[countNumber-1];
											}										
											else if(countNumber-2==obj.setOutput.length){
												obj.setOutput[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.setOutput[countNumber]!=tb.text){
												obj.setOutput[countNumber]=tb.text;
											}
											tb.text=obj.setOutput[countNumber-1];
										}									
										else
											tb.text=obj.setOutput[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}								
									else if(obj.name=="sourcePort"){
										tb.width=50;
										frmItem.label = "Source TCP/UDP Port";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.sourcePort[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.sourcePort.length){	
												if(obj.sourcePort[countNumber-2]==""||tb.text!=""){
													obj.sourcePort[countNumber-2]=tb.text;		
												}
												tb.text=obj.sourcePort[countNumber-1];
											}										
											else if(countNumber-2==obj.sourcePort.length){
												obj.sourcePort[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.sourcePort[countNumber]!=tb.text){
												obj.sourcePort[countNumber]=tb.text;
											}
											tb.text=obj.sourcePort[countNumber-1];
										}									
										else
											tb.text=obj.sourcePort[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
									}
									else if(obj.name=="destinationPort"){
										tb.width=50;
										frmItem.label = "Destination TCP/UDP Port";
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.destinationPort[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.destinationPort.length){	
												if(obj.destinationPort[countNumber-2]==""||tb.text!=""){
													obj.destinationPort[countNumber-2]=tb.text;		
												}
												tb.text=obj.destinationPort[countNumber-1];
											}										
											else if(countNumber-2==obj.destinationPort.length){
												obj.destinationPort[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.destinationPort[countNumber]!=tb.text){
												obj.destinationPort[countNumber]=tb.text;
											}
											tb.text=obj.destinationPort[countNumber-1];
										}									
										else
											tb.text=obj.destinationPort[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
										
										var contein3:HBox = new HBox();
										var word1:Text = new Text();							
										word1.text = "------- Actions -------";
										word1.setStyle("fontSize", "16");
										word1.setStyle("textAlign", "right");
										
										contein3.addChild(word1);
										contein3.setStyle("horizontalAlign","center");
										contein3.percentWidth=100;
										form.addChild(contein3);
									}										
									else if(obj.name=="notes"){
										tb.width=100;
										if(exportControll==true){
											if(ncount<(aa-1)){
												obj.notes[countNumber-1]=tb.text;
											}
										}
										if(regular==1){
											if(countNumber-2!=obj.notes.length){	
												if(obj.notes[countNumber-2]==""||tb.text!=""){
													obj.notes[countNumber-2]=tb.text;		
												}
												tb.text=obj.notes[countNumber-1];
											}										
											else if(countNumber-2==obj.notes.length){
												obj.notes[countNumber-2]=tb.text;
												tb.text="";
											}
										}	
										else if(regular==0){
											if(tb.text!=""&&obj.notes[countNumber]!=tb.text){
												obj.notes[countNumber]=tb.text;
											}
											tb.text=obj.notes[countNumber-1];
										}
										else
											tb.text=obj.notes[countNumber-1];
										
										tb.addEventListener(Event.CHANGE,change);
										frmItem.addChild(tb);
										form.addChild(frmItem);
										
										butAppChanges.label = "Apply Settings";
										butAppChanges.addEventListener(MouseEvent.CLICK, clickGo);
										if(testa==false)
											butAppChanges.addEventListener(MouseEvent.CLICK, success);
										changesObj.addChild(butAppChanges);
										
										changesObj.setStyle("horizontalAlign","center");
										changesObj.percentWidth=100;
										form.addChild(changesObj);									
									}
								}							
							}						
							if(obj.id=='string'){	
								frmItem = new FormItem();
								frmItem.direction = "horizontal";
								frmItem.label = obj.name;
								tb = new TextInput();
								tb.width=140;
								
								if( obj.name=="id" ){
									tb.text=this.name;
									tb.editable=false;
								}
								for(j=0;j<valueObjArr.length;j++){
									if(obj.name==valueObjArr[j].id){
										tb.text = valueObjArr[j].name;
									}
								}			        
								if(obj.name=='name'){
									if(tb.text=="")
										tb.text=this.name;
									lable.text=tb.text;
								}						
								else if(obj.name=="controllerIPAddress"){
									frmItem.label = "Controller IP Address";
									tb.width=100;
									tb.maxChars=15;
									lable.text=lable.text+" - "+tb.text;
									obj.controllerIPAddress = tb.text;								
								}
								else if(obj.name=="controllerPort"){
									frmItem.label = "Controller Port";
									tb.width=60;
									tb.maxChars=4;
									lable.text=lable.text+":"+tb.text;
									obj.controllerPort = tb.text;								
								}
								if(obj.name=="IPAddress"){
									frmItem.label = "IP Address";							
									tb.width=100;
									if(tb.text=="")
										tb.text="no ip defined";
									lable.text=lable.text+" - "+tb.text;
									tb.maxChars=17;
									if(parentApplication.getValueIPAddress.indexOf(tb.text)!=-1){									
										checkIp=true;
									}
									if(checkIp==false){
										parentApplication.getValueIPAddress.push(tb.text);
										obj.IPAddress = tb.text;
									}
								}
								if(obj.name=="MacAddress"){
									frmItem.label = "MAC Address";							
									tb.width=100;
									tb.maxChars=17;
									if(parentApplication.getValueMacAddress.indexOf(tb.text)!=-1){									
										checkMac=true;								
									}
									if(checkMac==false){
										if(obj.type == "Switch" || obj.type == "Access Point"){
											parentApplication.getValueSwitchMacAddress.push(tb.text);
										}
										parentApplication.getValueMacAddress.push(tb.text);
										obj.MacAddress = tb.text;
									}
								}
								if(obj.name=="numberofradios"){
									frmItem.label = "Number of Wireless Interfaces";							
									tb.width=30;
									tb.maxChars=2;
									obj.numberofRadios = tb.text;
								}				
								if(obj.name=="signalRange"){
									frmItem.label = "Signal Range";
									tb.width=60;
									tb.enabled=true;
									tb.maxChars=10;
	    							parentApplication.getValueSignalRange.push(tb.text);
									obj.range = tb.text;
									this.range=parseInt(tb.text);
									updateCircle()
								}					
								tb.addEventListener(Event.CHANGE,change);
								frmItem.addChild(tb);
								form.addChild(frmItem);
						
								if(obj.name=="listeningPort"){
									frmItem.label = "Listening Port";
									tb.width=60;
									tb.enabled=true;
									tb.maxChars=5;
									parentApplication.getValueListenPort.push(tb.text);
									obj.listenPortSwitch = tb.text;
								}						
								tb.addEventListener(Event.CHANGE,change);
								frmItem.addChild(tb);
								form.addChild(frmItem);	
								
								if(obj.name=="ssid"){
									frmItem.label = "SSID";
									tb.width=100;
									tb.enabled=true;
									lable.text=lable.text+":"+tb.text;
									tb.maxChars=10;
									parentApplication.getValueRouterSSID.push(tb.text);
									obj.ssid = tb.text;
								}					
								tb.addEventListener(Event.CHANGE,change);
								frmItem.addChild(tb);
								form.addChild(frmItem);			
							}								
							else if(obj.id=='boolean'){
								frmItem = new FormItem();
								frmItem.direction = "horizontal";
								frmItem.label = obj.name; 
								var tb2:ComboBox = new ComboBox();
								tb2.dataProvider = ['true','false'];
								tb2.selectedIndex=0;
								tb2.addEventListener(Event.CHANGE,change);
								
								for(var l:int=0;l<valueObjArr.length;l++){
									if(valueObjArr[l].id==frmItem.label){
										tb2.selectedIndex =valueObjArr[l].name;
										break;
									}
									else;
								}			
								frmItem.addChild(tb2);
								form.addChild(frmItem);								
							}
							else if(obj.id=='radio') {
								if(obj.name=="remoteLocal"){
									frmItem = new FormItem();
									frmItem.direction = "horizontal";
									frmItem.label =  "Remote Controller" 
									radioButton = new RadioButtonGroup;
									
									if(valofremoteLocal=="true"){
										rb = new RadioButton();
										rb.label = "yes";
										rb.group = radioButton;
										rb.selected = false
										frmItem.addChild(rb);
										rb = new RadioButton();
										rb.label = "no";
										rb.group = radioButton;
										rb.selected = true
										frmItem.addChild(rb);
										obj.isRemote = rb.selected;
										rb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);										
									}
									else{
										rb = new RadioButton();
										rb.label = "yes";
										rb.group = radioButton;
										rb.selected = true
										frmItem.addChild(rb);
										rb = new RadioButton();
										rb.label = "no";
										rb.group = radioButton;
										rb.selected = false
										frmItem.addChild(rb);
										obj.isRemote = rb.selected;
										rb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);										
									}
									form.addChild(frmItem);	
								}
							}							
							else if(obj.id=='options') {								
								if(obj.name=="macSwitch" || obj.name=="setMACSource" || obj.name=="setMACDestination"
										|| obj.name=="macDestination" || obj.name=="macSource"){
									frmItem = new FormItem();
									frmItem.direction = "horizontal";
									if(obj.name=="macSwitch"){
										frmItem.label = "Switch MAC Address";
									}
									else if(obj.name == "macDestination"){
										frmItem.label = "Destination MAC";
									}
									else if(obj.name == "macSource"){
										frmItem.label = "Source MAC";
									}
									else if(obj.name=="setMACSource"){
										frmItem.label = "Set Source MAC";
									}
									else if(obj.name=="setMACDestination"){
										frmItem.label = "Set Destination MAC"; 
									}
									tb3 = new ComboBox();
									if(obj.name=="macSwitch"){
										obj.MacSwitch = parentApplication.getValueSwitchMacAddress;
										obj.MacSwitch = obj.MacSwitch.concat("none");
										tb3.dataProvider = obj.MacSwitch;
									}
									else{
										if(parentApplication.getValueMacAddress!=[]||exportControll==true){
											obj.MacSwitch = parentApplication.getValueMacAddress;
											obj.MacSwitch = obj.MacSwitch.concat("none");
											tb3.dataProvider = obj.MacSwitch;
										}
										else{
											tb3.dataProvider = "none";
										}
									}
								}		
								else if(obj.name=="ipDestination" || obj.name=="setIPDestination"
								|| obj.name=="setIPSource" || obj.name=="ipSource"){
									frmItem = new FormItem();
									frmItem.direction = "horizontal";
									if(obj.name=="ipDestination"){
										frmItem.label = "Destination IP"; 
									}
									else if(obj.name=="setIPDestination"){
										frmItem.label = "Set Destination IP";
									}
									else if(obj.name=="setIPSource"){
										frmItem.label = "Set Source IP";
									}
									else if(obj.name=="ipSource"){
										frmItem.label = "Source IP";
									}
									tb3 = new ComboBox();
									if(parentApplication.getValueIPAddress!=[]){
										tb3.selectedIndex=-1;
										obj.listIPAddress = parentApplication.getValueIPAddress;
										obj.listIPAddress = obj.listIPAddress.concat("none");
										tb3.dataProvider = obj.listIPAddress;
									}
									else{
										tb3.dataProvider = "none";
									}							
								}
								else if(obj.name=="setVlanID"){
									frmItem = new FormItem();
									frmItem.direction = "horizontal";
									frmItem.label = "Set Vlan ID"; 
									tb3 = new ComboBox();
									tb3.dataProvider = obj.option;								
								}
								else if(obj.name=="vlanID"){
									frmItem = new FormItem();
									frmItem.direction = "horizontal";
									frmItem.label = "Vlan ID"; 
									tb3 = new ComboBox();
									tb3.dataProvider = obj.option;		
								}
								else if(obj.name=="setStripVlan"){
									frmItem = new FormItem();
									frmItem.direction = "horizontal";
									frmItem.label = "Set Strip Vlan"; 
									tb3 = new ComboBox();
									tb3.dataProvider = obj.option;				
								}
								else if(obj.name=="openflowController"){
									frmItem = new FormItem();
									frmItem.direction = "horizontal";
									frmItem.label = obj.name; 
									tb3 = new ComboBox();
									tb3.dataProvider = obj.option;
									tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
									var check:Boolean=false;								
									for(o=0;o<valueObjArr.length;o++){									
										if(valueObjArr[o].id==frmItem.label){
											check=true;
											if(parentApplication.exportControllforcombo==true){
												if(valofcomboopenflowcontroller!=null&&valofcomboopenflowcontroller!=""&&valofcomboopenflowcontroller!=valueObjArr[o].name)
													tb3.selectedItem=valofcomboopenflowcontroller;
												else
													tb3.selectedItem = valueObjArr[o].name;
											}
											else {
												tb3.selectedIndex = valueObjArr[o].name;
											}
										}										
									}
									if(check==false)
										tb3.selectedIndex=-1;
									frmItem.addChild(tb3);
									tb3.addEventListener(Event.CHANGE,change);																
								}								
								else{
									frmItem = new FormItem();
									frmItem.direction = "horizontal";
									frmItem.label = obj.name; 
									tb3 = new ComboBox();
									tb3.dataProvider = obj.option;
									tb3.selectedIndex=-1;
									frmItem.addChild(tb3);
									tb3.addEventListener(Event.CHANGE,change);								
								}
								
								for(var o:int=0;o<valueObjArr.length;o++){
									if(valueObjArr[o].id==frmItem.label){
										if(obj.name=="openflowController"){	
											frmItem.label = "Openflow Controller";
											obj.openflowController=valueObjArr[o].combeValue;
										}
										break;
									}						
								}
								
								if(obj.name=="mask"){
									obj.MaskAddress = tb3.selectedLabel;
									frmItem.label = "Mask";
									frmItem.addChild(tb3);
									tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);								
									form.addChild(frmItem);								
									for(o=0;o<valueObjArr.length;o++){		
										if(valueObjArr[o].id=="mask"){
											if(parentApplication.exportControllforcombo==true){
												if(valofcombocomputermask!=null&&valofcombocomputermask!=""&&valofcombocomputermask!=valueObjArr[o].name)
													tb3.selectedItem=valofcombocomputermask;
												else
													tb3.selectedItem = valueObjArr[o].name;
												obj.MaskAddress = tb3.selectedLabel;
											}
											else {
												tb3.selectedIndex = valueObjArr[o].name;
												obj.MaskAddress = tb3.selectedLabel;
											}
										}
									}
									tb3.addEventListener(Event.CHANGE,change);							
								}
								else if(obj.name=="switch"){
									obj.arraySwitch = String(tb3.selectedItem);
									frmItem.label = "Switch";
									tb3.selectedIndex=1;
									frmItem.addChild(tb3);
									tb3.enabled=true;
									tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);								
									form.addChild(frmItem);								
									for(o=0;o<valueObjArr.length;o++){		
										if(valueObjArr[o].id=="switch"){
											if(parentApplication.exportControllforcombo==true){
												if(valofcomboswitch!=null&&valofcomboswitch!=""&&valofcomboswitch!=valueObjArr[o].name)
													tb3.selectedItem=valofcomboswitch;
												else
													tb3.selectedItem = valueObjArr[o].name;
												obj.arraySwitch=String(tb3.selectedItem);
												obj.switchType = tb3.selectedLabel;
												parentApplication.getSwitch_ = obj.arraySwitch;
											}
											else {
												tb3.selectedIndex = valueObjArr[o].name;
												obj.arraySwitch = String(tb3.selectedItem);
											}
										}
									}
									tb3.addEventListener(Event.CHANGE,change);							
								}
								else if(obj.name=="ofp_version"){									
									obj.openFlowVersion = String(tb3.selectedItem);
									frmItem.label = "OpenFlow Version";
									frmItem.addChild(tb3);
									tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);								
									form.addChild(frmItem);								
									for(o=0;o<valueObjArr.length;o++){		
										if(valueObjArr[o].id=="ofp_version"){										
											if(parentApplication.exportControllforcombo==true){
												if(valofcomboopenflowversion!=null&&valofcomboopenflowversion!=""&&valofcomboopenflowversion!=valueObjArr[o].name)
													tb3.selectedItem=valofcomboopenflowversion;
												else
													tb3.selectedItem = valueObjArr[o].name;
												obj.openFlowVersion = tb3.selectedLabel;
											}
											else {
												
												tb3.selectedIndex = valueObjArr[o].name;
												obj.openFlowVersion = tb3.selectedLabel;
											}
										}
									}
									tb3.addEventListener(Event.CHANGE,change);							
								}
								else if(obj.name=="mode"){		
									obj.mode = String(tb3.selectedItem);
									frmItem.label = "Mode";
									frmItem.addChild(tb3);
									tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);								
									form.addChild(frmItem);								
									for(o=0;o<valueObjArr.length;o++){		
										if(valueObjArr[o].id=="mode"){										
											if(parentApplication.exportControllforcombo==true){
												if(valofcombomode!=null&&valofcombomode!=""&&valofcombomode!=valueObjArr[o].name)
													tb3.selectedItem=valofcombomode;
												else
													tb3.selectedItem = valueObjArr[o].name;
												obj.mode = tb3.selectedLabel;
											}
											else {
												
												tb3.selectedIndex = valueObjArr[o].name;
												obj.mode = tb3.selectedLabel;
											}
										}
									}
									tb3.addEventListener(Event.CHANGE,change);	
								}								
								else if(obj.name=="channel"){	
									obj.channel = tb3.selectedLabel;
									frmItem.label = "Channel";
									frmItem.addChild(tb3);
									tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);								
									form.addChild(frmItem);								
									for(o=0;o<valueObjArr.length;o++){		
										if(valueObjArr[o].id=="channel"){										
											if(parentApplication.exportControllforcombo==true){
												if(valofcombochannel!=null&&valofcombochannel!=""&&valofcombochannel!=valueObjArr[o].name)
													tb3.selectedItem=valofcombochannel;
												else
													tb3.selectedItem = valueObjArr[o].name;
												obj.channel = tb3.selectedLabel;
											}
											else {
												
												tb3.selectedIndex = valueObjArr[o].name;
												obj.channel = tb3.selectedLabel;
											}
										}
									}
									tb3.addEventListener(Event.CHANGE,change);	
								}	
								else if(obj.name=="ethernetType"||obj.name=="vlanID"||obj.name=="setVlanID"||obj.name=="macSource"||obj.name==
									"macDestination"||obj.name=="ipDestination"||obj.name=="ipSource"||obj.name=="setIPSource"
									||obj.name=="setIPDestination"||obj.name=="setMACDestination"||obj.name=="setMACSource"
									||obj.name=="sourcePort"||obj.name=="setMACSource"||obj.name=="macSwitch"||obj.name=="setStripVlan"){
									if(flowtab==1||exportControll==true){										
										for(j=0;j<valueObjArr.length;j++){
											if(obj.name==valueObjArr[j].id){
												tb3 = new ComboBox();				
												tb3.selectedItem = valueObjArr[j].name;
												if(obj.name=="vlanID"){
													valofcombovlanid1=valueObjArr[j].name;
												}
												else if(obj.name=="setVlanID"){
													valofcombosetvlanid1=valueObjArr[j].name;
												}
												else if(obj.name=="setStripVlan"){
													valofcombosetstripvlan1=valueObjArr[j].name;
												}
												
												valueObjArr[j].name="";								
												if(exportControll==true && ncount<(aa-1)){
													valueObjArr.removeItemAt(j);
												}
												break;
											}
										}
										
										if(obj.name=="vlanID"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = obj.name; 
											tb3.dataProvider = obj.option;
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);
											if(exportControll==true){
												if(ncount<(aa-1)){				
													obj.vlanID[countNumber-1]=tb3.selectedLabel;
													if(valofcombovlanid1==null){
														obj.vlanID[countNumber-1]=null;
													}
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.vlanID.length){	
													if(obj.vlanID[countNumber-2]==undefined || obj.vlanID[countNumber-2]=="" || obj.vlanID[countNumber-2]==null || valofcombo!=obj.vlanID[countNumber-2]){
														obj.vlanID[countNumber-2]=valofcombovlanid;
														valofcombovlanid="";
													}
													tb3.selectedItem=obj.vlanID[countNumber-1];
												}					
												else if(countNumber-2==obj.vlanID.length){
													obj.vlanID[countNumber-2]=valofcombovlanid;
													valofcombovlanid="";
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.vlanID[countNumber]==undefined || obj.vlanID[countNumber]=="" || obj.vlanID[countNumber]==null || valofcombovlanid!=obj.vlanID[countNumber]){
													obj.vlanID[countNumber]=valofcombovlanid;									
												}
												tb3.selectedItem=obj.vlanID[countNumber-1];
											}
											else{
												tb3.selectedItem=obj.vlanID[countNumber-1];								
											}							
										}
										else if(obj.name=="setVlanID"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Set Vlan ID"; 
											tb3.dataProvider = obj.option;
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);			
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.setVlanID[countNumber-1]=tb3.selectedLabel;
													if(valofcombosetvlanid1==null){
														obj.setVlanID[countNumber-1]=null;
													}								
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.setVlanID.length){			
													if(obj.setVlanID[countNumber-2]==undefined || obj.setVlanID[countNumber-2]=="" || obj.setVlanID[countNumber-2]==null || valofcombosetvlanid!=obj.setVlanID[countNumber-2]){
														obj.setVlanID[countNumber-2]=valofcombosetvlanid;
													}
													tb3.selectedItem=obj.setVlanID[countNumber-1];
												}					
												else if(countNumber-2==obj.setVlanID.length){
													obj.setVlanID[countNumber-2]=valofcombosetvlanid;
													tb3.selectedIndex=-1;								
												}
											}	
											else if(regular==0){
												if(obj.setVlanID[countNumber]==undefined || obj.setVlanID[countNumber]=="" || obj.setVlanID[countNumber]==null || valofcombosetvlanid!=obj.setVlanID[countNumber]){
													obj.setVlanID[countNumber]=valofcombosetvlanid;									
												}
												tb3.selectedItem=obj.setVlanID[countNumber-1];
											}
											else{
												tb3.selectedItem=obj.setVlanID[countNumber-1];								
											}		
										}
										else if(obj.name=="macSource"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Source MAC"; 
											tb3.dataProvider = new ArrayCollection(obj.MacSwitch);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.macSource[countNumber-1]=tb3.selectedLabel;
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.macSource.length){			
													if(obj.macSource[countNumber-2]==undefined || obj.macSource[countNumber-2]=="" || obj.macSource[countNumber-2]==null || valofcombomacsource!=obj.macSource[countNumber-2]){
														obj.macSource[countNumber-2]=valofcombomacsource;
													}
													tb3.selectedItem=obj.macSource[countNumber-1];
												}					
												else if(countNumber-2==obj.macSource.length){
													obj.macSource[countNumber-2]=valofcombomacsource;
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.macSource[countNumber]==undefined || obj.macSource[countNumber]=="" || obj.macSource[countNumber]==null || valofcombomacsource!=obj.macSource[countNumber]){
													obj.macSource[countNumber]=valofcombomacsource;									
												}
												tb3.selectedItem=obj.macSource[countNumber-1];
											}
											else{
												tb3.selectedItem=obj.macSource[countNumber-1];				
											}
										}
										else if(obj.name=="macDestination"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Destination MAC";
											tb3.dataProvider = new ArrayCollection(obj.MacSwitch);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.macDestination[countNumber-1]=tb3.selectedLabel;	
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.macDestination.length){			
													if(obj.macDestination[countNumber-2]==undefined || obj.macDestination[countNumber-2]=="" || obj.macDestination[countNumber-2]==null || valofcombomacdestination!=obj.macDestination[countNumber-2]){
														obj.macDestination[countNumber-2]=valofcombomacdestination;	
													}
													tb3.selectedItem=obj.macDestination[countNumber-1];
												}					
												else if(countNumber-2==obj.macDestination.length){
													obj.macDestination[countNumber-2]=valofcombomacdestination;								
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.macDestination[countNumber]==undefined || obj.macDestination[countNumber]=="" || obj.macDestination[countNumber]==null || valofcombomacdestination!=obj.macDestination[countNumber]){
													obj.macDestination[countNumber]=valofcombomacdestination;									
												}
												tb3.selectedItem=obj.macDestination[countNumber-1];
											}
											else{
												tb3.selectedItem=obj.macDestination[countNumber-1];	
											}
										}
										else if(obj.name=="macSwitch"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Switch MAC Address";
											tb3.dataProvider = new ArrayCollection(obj.MacSwitch);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.listMacSwitch[countNumber-1]=tb3.selectedLabel;
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.listMacSwitch.length){			
													if(obj.listMacSwitch[countNumber-2]==undefined || obj.listMacSwitch[countNumber-2]=="" || obj.listMacSwitch[countNumber-2]==null || valofcombomacswitch!=obj.listMacSwitch[countNumber-2]){
														obj.listMacSwitch[countNumber-2]=valofcombomacswitch;
													}
													tb3.selectedItem=obj.listMacSwitch[countNumber-1];
												}					
												else if(countNumber-2==obj.listMacSwitch.length){
													obj.listMacSwitch[countNumber-2]=valofcombomacswitch;
													tb3.selectedIndex=-1;								
												}
											}	
											else if(regular==0){
												if(obj.listMacSwitch[countNumber]==undefined || obj.listMacSwitch[countNumber]=="" || obj.listMacSwitch[countNumber]==null || valofcombomacswitch!=obj.listMacSwitch[countNumber]){
													obj.listMacSwitch[countNumber]=valofcombomacswitch;									
												}
												tb3.selectedItem=obj.listMacSwitch[countNumber-1];
											}
											else{
												tb3.selectedItem=obj.listMacSwitch[countNumber-1];
											}	
										}
										else if(obj.name=="ipDestination"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Destination IP"; 
											tb3.dataProvider = new ArrayCollection(obj.listIPAddress);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);	
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.ipDestination[countNumber-1]=tb3.selectedLabel;
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.ipDestination.length){			
													if(obj.ipDestination[countNumber-2]==undefined || obj.ipDestination[countNumber-2]=="" || obj.ipDestination[countNumber-2]==null || valofcomboipdestination!=obj.ipDestination[countNumber-2]){
														obj.ipDestination[countNumber-2]=valofcomboipdestination;
													}
													tb3.selectedItem=obj.ipDestination[countNumber-1];
												}					
												else if(countNumber-2==obj.ipDestination.length){
													obj.ipDestination[countNumber-2]=valofcomboipdestination;
													tb3.selectedIndex=-1;
												}
											}
											else if(regular==0){
												if(obj.ipDestination[countNumber]==undefined || obj.ipDestination[countNumber]=="" || obj.ipDestination[countNumber]==null || valofcomboipdestination!=obj.ipDestination[countNumber]){
													obj.ipDestination[countNumber]=valofcomboipdestination;									
												}
												tb3.selectedItem=obj.ipDestination[countNumber-1];
											}
											else{
												tb3.selectedItem=obj.ipDestination[countNumber-1];
											}
										}
										else if(obj.name=="ipSource"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Source IP"; 
											tb3.dataProvider = new ArrayCollection(obj.listIPAddress);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);	
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.ipSource[countNumber-1]=tb3.selectedLabel;
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.ipSource.length){			
													if(obj.ipSource[countNumber-2]==undefined || obj.ipSource[countNumber-2]=="" || obj.ipSource[countNumber-2]==null || valofcomboipsource!=obj.ipSource[countNumber-2]){
														obj.ipSource[countNumber-2]=valofcomboipsource;									
													}
													tb3.selectedItem=obj.ipSource[countNumber-1];
												}					
												else if(countNumber-2==obj.ipSource.length){
													obj.ipSource[countNumber-2]=valofcomboipsource;									
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.ipSource[countNumber]==undefined || obj.ipSource[countNumber]=="" || obj.ipSource[countNumber]==null || valofcomboipsource!=obj.ipSource[countNumber]){
													obj.ipSource[countNumber]=valofcomboipsource;									
												}
												tb3.selectedItem=obj.ipSource[countNumber-1];
											}
											else{
												tb3.selectedItem=obj.ipSource[countNumber-1];
											}
										}
										else if(obj.name=="setIPSource"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Set Source IP"; 
											tb3.dataProvider = new ArrayCollection(obj.listIPAddress);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);	
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.setIPSource[countNumber-1]=tb3.selectedLabel;
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.setIPSource.length){			
													if(obj.setIPSource[countNumber-2]==undefined || obj.setIPSource[countNumber-2]=="" || obj.setIPSource[countNumber-2]==null || valofcombosetipsource!=obj.setIPSource[countNumber-2]){
														obj.setIPSource[countNumber-2]=valofcombosetipsource;
													}
													tb3.selectedItem=obj.setIPSource[countNumber-1];
												}					
												else if(countNumber-2==obj.setIPSource.length){
													obj.setIPSource[countNumber-2]=valofcombosetipsource;
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.setIPSource[countNumber]==undefined || obj.setIPSource[countNumber]=="" || obj.setIPSource[countNumber]==null || valofcombosetipsource!=obj.setIPSource[countNumber]){
													obj.setIPSource[countNumber]=valofcombosetipsource;									
												}
												tb3.selectedItem=obj.setIPSource[countNumber-1];						
											}
											else{
												tb3.selectedItem=obj.setIPSource[countNumber-1];
											}
										}
										else if(obj.name=="setIPDestination"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Set Destination IP"; 
											tb3.dataProvider = new ArrayCollection(obj.listIPAddress);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);		
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.setIPDestination[countNumber-1]=tb3.selectedLabel;
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.setIPDestination.length){			
													if(obj.setIPDestination[countNumber-2]==undefined || obj.setIPDestination[countNumber-2]=="" || obj.setIPDestination[countNumber-2]==null || valofcombosetipdestination!=obj.setIPDestination[countNumber-2]){
														obj.setIPDestination[countNumber-2]=valofcombosetipdestination;									
													}
													tb3.selectedItem=obj.setIPDestination[countNumber-1];
												}					
												else if(countNumber-2==obj.setIPDestination.length){
													obj.setIPDestination[countNumber-2]=valofcombosetipdestination;	
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.setIPDestination[countNumber]==undefined || obj.setIPDestination[countNumber]=="" || obj.setIPDestination[countNumber]==null || valofcombosetipdestination!=obj.setIPDestination[countNumber]){
													obj.setIPDestination[countNumber]=valofcombosetipdestination;									
												}
												tb3.selectedItem=obj.setIPDestination[countNumber-1];						
											}
											else{
												tb3.selectedItem=obj.setIPDestination[countNumber-1];
											}
										}
										else if(obj.name=="setMACSource"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Set Source MAC"; 
											tb3.dataProvider = new ArrayCollection(obj.MacSwitch);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.setMACSource[countNumber-1]=tb3.selectedLabel;
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.setMACSource.length){			
													if(obj.setMACSource[countNumber-2]==undefined || obj.setMACSource[countNumber-2]=="" || obj.setMACSource[countNumber-2]==null || valofcombosetmacsource!=obj.setMACSource[countNumber-2]){
														obj.setMACSource[countNumber-2]=valofcombosetmacsource;									
													}
													tb3.selectedItem=obj.setMACSource[countNumber-1];
												}					
												else if(countNumber-2==obj.setMACSource.length){
													obj.setMACSource[countNumber-2]=valofcombosetmacsource;									
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.setMACSource[countNumber]==undefined || obj.setMACSource[countNumber]=="" || obj.setMACSource[countNumber]==null || valofcombosetmacsource!=obj.setMACSource[countNumber]){
													obj.setMACSource[countNumber]=valofcombosetmacsource;									
												}
												tb3.selectedItem=obj.setMACSource[countNumber-1];						
											}
											else{
												tb3.selectedIndex=-1;
											}
										}
										else if(obj.name=="setMACDestination"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Set Destination MAC"; 
											tb3.dataProvider = new ArrayCollection(obj.MacSwitch);
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.setMACDestination[countNumber-1]=tb3.selectedLabel;
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.setMACDestination.length){			
													if(obj.setMACDestination[countNumber-2]==undefined || obj.setMACDestination[countNumber-2]=="" || obj.setMACDestination[countNumber-2]==null || valofcombosetmacdestination!=obj.setMACDestination[countNumber-2]){
														obj.setMACDestination[countNumber-2]=valofcombosetmacdestination;									
													}
													tb3.selectedItem=obj.setMACDestination[countNumber-1];
												}					
												else if(countNumber-2==obj.setMACDestination.length){
													obj.setMACDestination[countNumber-2]=valofcombosetmacdestination;									
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.setMACDestination[countNumber]==undefined || obj.setMACDestination[countNumber]=="" || obj.setMACDestination[countNumber]==null || valofcombosetmacdestination!=obj.setMACDestination[countNumber]){
													obj.setMACDestination[countNumber]=valofcombosetmacdestination;									
												}
												tb3.selectedItem=obj.setMACDestination[countNumber-1];							
											}
											else{
												tb3.selectedIndex=-1;
											}
										}					
										else if(obj.name=="setStripVlan"){
											frmItem = new FormItem();
											frmItem.direction = "horizontal";
											frmItem.label = "Set Strip Vlan"; 
											tb3.dataProvider = obj.option;
											frmItem.addChild(tb3);	
											tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
											form.addChild(frmItem);
											if(exportControll==true){
												if(ncount<(aa-1)){
													obj.setStripVlan[countNumber-1]=tb3.selectedLabel;
													if(valofcombosetstripvlan1==null){
														obj.setStripVlan[countNumber-1]=null;
													}
												}
											}
											if(regular==1){
												if(countNumber-2!=obj.setStripVlan.length){			
													if(obj.setStripVlan[countNumber-2]==undefined || obj.setStripVlan[countNumber-2]=="" || obj.setStripVlan[countNumber-2]==null || valofcombosetstripvlan!=obj.setStripVlan[countNumber-2]){
														obj.setStripVlan[countNumber-2]=valofcombosetstripvlan;
													}
													tb3.selectedItem=obj.setStripVlan[countNumber-1];
												}					
												else if(countNumber-2==obj.setStripVlan.length){
													obj.setStripVlan[countNumber-2]=valofcombosetstripvlan;
													tb3.selectedIndex=-1;
												}
											}	
											else if(regular==0){
												if(obj.setStripVlan[countNumber]==undefined || obj.setStripVlan[countNumber]=="" || obj.setStripVlan[countNumber]==null || valofcombosetstripvlan!=obj.setStripVlan[countNumber]){
													obj.setStripVlan[countNumber]=valofcombosetstripvlan;									
												}
												tb3.selectedItem=obj.setStripVlan[countNumber-1];
											}
											else{
												tb3.selectedItem=obj.setStripVlan[countNumber-1];
											}
										}
									}
								}
								else{
									frmItem.addChild(tb3);
									tb3.addEventListener(Event.CHANGE,change);
									form.addChild(frmItem)
								}												
							}
							if(i+1==objparaArrayCol.length){
								if(checkifcomputer||checkifswitchopenflow||checkifstation||checkifcar){
									frmItem = new FormItem();
									var button:Button = new Button();
									button.label="Apply Settings";
									frmItem.addChild(button);
									button.addEventListener(MouseEvent.CLICK,getComboValue);
									if(testa==false)
										button.addEventListener(MouseEvent.CLICK, success);
									form.addChild(frmItem);	
								}		
							}
						} 
					}
					listnerAddHandler();
					rec = new Rectangle(0, 0, this.parent.width-this.width, this.parent.height-this.height);
					secondTime=false;
				}			
				else 
					ini();
			}
			
			private function dispFlowtab(evt:MouseEvent):void {
				checkifcontrollerpenflow=true;
				flowtab=1;
				this.secondTime=true;
				second();				
			}
			
			private function success(evt:MouseEvent):void {	
				HAlert.success(HMensagens.Success);
				
			}
			
			private function appchangesobj(evt:MouseEvent):void {	
				regular=2;
				this.secondTime=true;
				second();
				if(testa==false)
					HAlert.success(HMensagens.Success);
				confirmUpt=true;
			}
			
			private function clickGo(evt:MouseEvent):void {
				regular=1;
				this.secondTime=true;
				second();
			}
			
			private function clickBack(evt:MouseEvent):void {
				regular=0;
				this.secondTime=true;
				second();
			}
			
			public function ini():void {
				form=new Form();
				this.can.addChildAt(form,1);
				
				if(this.name.slice(0,6)=="Switch"){
					var checkifswitchopenflow:Boolean=true;
					ab = int(this.name.slice(7,9));
					this.type = "Switch";
					this.nid = ab;
					if(ab!=parentApplication.contSwitch){
						parentApplication.contSwitch++;
					}
				}	
				else if(this.name.slice(0,12)=="Access Point"){
					checkifswitchopenflow=true;
					ab = int(this.name.slice(13,15));
					this.type = "Access Point";
					this.nid = ab;
					if(ab!=parentApplication.contSwitch){
						parentApplication.contSwitch++;
					}
				}
				else if(this.name.slice(0,3)=="Car"){
					checkifswitchopenflow=true;
					ab = int(this.name.slice(4,6));
					this.type = "Car";
					this.nid = ab;
				}
				else if(this.name.slice(0,8)=="Computer"){
					var checkifcomputer:Boolean=true;
					ab = int(this.name.slice(9,11));
					this.type = "Computer";
					this.nid = ab;
				}
				else if(this.name.slice(0,7)=="Station"){
					var checkifstation:Boolean=true;
					ab = int(this.name.slice(8,10));
					this.type = "Station";
					this.nid = ab;				
				}	
				else if(this.name.slice(0,10)=="Controller"){
					ab = int(this.name.slice(11,13));
					this.type = "Controller";
					this.nid = ab;
					if(ab!=parentApplication.contController){
						parentApplication.contController++;
					}
				}	
				
				for(var i:int=0;i<objparaArrayCol.length;i++){
					var obj:objParameter=objparaArrayCol[i];
					
					if(this.name.slice(0,6)=="Switch"){
						obj.nid = int(this.name.slice(7,9));
						obj.type = "Switch";						
					}	
					
					if(this.name.slice(0,12)=="Access Point"){
						obj.nid = int(this.name.slice(13,15));
						obj.type = "Access Point";
					}	
					
					if(this.name.slice(0,8)=="Computer"){
						obj.nid = int(this.name.slice(9,11));
						obj.type = "Computer";
					}
					
					if(this.name.slice(0,7)=="Station"){
						obj.nid = int(this.name.slice(8,10));
						obj.type = "Station";
					}	
					
					if(this.name.slice(0,10)=="Controller"){
						obj.nid = int(this.name.slice(11, 13));
						obj.type = "Controller";
					}
					
					if(obj.id=='array'){						
						var frmItem:FormItem = new FormItem();
						frmItem.direction = "horizontal";
						frmItem.label = obj.name;
						var tb:TextInput = new TextInput();
						tb.addEventListener(Event.CHANGE,change);
						
						if(obj.name=="flowName"){
							tb.width=100;			
							butAppChanges = new Button();
							changesObj = new HBox();
							
							butAppChanges.label = "Apply Settings";
							butAppChanges.addEventListener(MouseEvent.CLICK, appchangesobj);
							changesObj.addChild(butAppChanges);
							changesObj.setStyle("horizontalAlign","center");
							changesObj.percentWidth=100;
							form.addChild(changesObj);
						}
					}
					
					if(obj.id=='string'){
						frmItem = new FormItem();
						frmItem.direction = "horizontal";
						frmItem.label = obj.name;
						tb = new TextInput();
						tb.width=140;
						tb.addEventListener(Event.CHANGE,change);								
						
						if( obj.name=="id" ){
							tb.text =  this.name;
							tb.editable=false;	
						}							
						if(obj.name=="name"){
							tb.text= this.name;
							lable.text=tb.text;
						}
						if(obj.name=="controllerIPAddress"){
							frmItem.label = "Controller IP Address";
							tb.width=100;
							tb.maxChars=15;
							tb.enabled=true;
							tb.text="127.0.0.1";
							obj.controllerIPAddress = tb.text;							
							lable.text=lable.text+" - "+tb.text;
							tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
						}
						else if(obj.name=="controllerPort"){
							frmItem.label = "Controller Port";
							tb.text="663"+(parentApplication.contController+2);
							tb.width=60;
							tb.maxChars=4;		
							lable.text=lable.text+":"+tb.text;
							obj.controllerPort = tb.text;	
							tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
						}
						else if(obj.name=="listeningPort"){
							frmItem.label = "Listening Port";
							tb.enabled=true;
							tb.width=60;
							tb.maxChars=5;			
							tb.text="6"+(parentApplication.contSwitch+2);							
							parentApplication.getValueListenPort.push(tb.text);														
							obj.listenPortSwitch = tb.text;
							tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
						}
						else if(obj.name=="ssid"){
							frmItem.label = "SSID";
							tb.enabled=true;
							tb.width=100;
							tb.maxChars=10;		
							tb.text="new-ssid"+this.nid;
							parentApplication.getValueRouterSSID.push(tb.text);														
							obj.ssid = tb.text;
							lable.text=lable.text+":"+tb.text;
							tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
						}
						else if(obj.name=="signalRange"){
							frmItem.label = "Signal Range";
							tb.enabled=true;
							tb.width=60;
							tb.maxChars=5;	
							if(this.id == "Access Point"){
								tb.text="100";
							}
							else{
								tb.text="18";
							}
	   						parentApplication.getValueSignalRange.push(tb.text);														
							obj.range = tb.text;
							this.range=parseInt(tb.text);
							tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
						}
						else if(obj.name=="IPAddress"){
							frmItem.label = "IP Address";
							tb.width=100;
							tb.maxChars=15;
							tb.text="10.0.0."+ab;
							lable.text=lable.text+" - "+tb.text;
							parentApplication.getValueIPAddress.push(tb.text);
							obj.IPAddress = tb.text;
							tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
						}
						else if(obj.name=="MacAddress"){
							frmItem.label = "MAC Address";
							tb.width=100;
							tb.maxChars=17;
							if(ab<10)
								tb.text="00:00:00:00:00:0"+ab;
							else
								tb.text="00:00:00:00:00:"+ab;	
							if(obj.type == "Switch" || obj.type == "Access Point"){
								parentApplication.getValueSwitchMacAddress.push(tb.text);
							}							
							parentApplication.getValueMacAddress.push(tb.text);
							obj.MacAddress = tb.text;
							tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
						}	
						else if(obj.name=="numberofradios"){
							frmItem.label = "Number of Wireless Interfaces";
							tb.width=30;
							tb.maxChars=2;
							tb.text="1"
							obj.numberofRadios = tb.text;
							tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
						}	
						frmItem.addChild(tb);
						form.addChild(frmItem);
					}
					
					if(obj.id=='boolean') {	
						frmItem = new FormItem();
						frmItem.direction = "horizontal";
						frmItem.label = obj.name; 
						var tb2:ComboBox = new ComboBox();
						tb2.dataProvider = ['true','false'];
						tb2.selectedIndex=0;
						frmItem.addChild(tb2);
						tb2.addEventListener(Event.CHANGE,change);
						form.addChild(frmItem);
					}		
					
					if(obj.id=='radio') {
						if(obj.name=="remoteLocal"){
							frmItem = new FormItem();
							frmItem.direction = "horizontal";
							radioButton = new RadioButtonGroup;
							radioButton.enabled = true;
							frmItem.label = "Remote Controller";
							var rb:RadioButton = new RadioButton();
							rb.label = "yes";
							rb.group = radioButton;
							frmItem.addChild(rb);
							rb = new RadioButton();
							rb.label = "no";
							rb.selected = true;
							rb.group = radioButton;
							frmItem.addChild(rb);
							obj.isRemote = rb.selected;								
							rb.addEventListener(FlexEvent.UPDATE_COMPLETE, change);
							form.addChild(frmItem);
						}
					}
					
					if(obj.id=='options') {
						if(obj.name=="switch"){	
							frmItem = new FormItem();
							frmItem.direction = "horizontal";
							tb3 = new ComboBox();
							tb3.enabled=true;
							tb3.dataProvider = obj.option;
							if(parentApplication.getSwitch_==null||parentApplication.getSwitch_=="")
								tb3.selectedIndex=1;
							else
								tb3.selectedItem=parentApplication.getSwitch_;
							frmItem.label = "Switch";
							frmItem.addChild(tb3);
							obj.switchType = tb3.selectedLabel;	
							tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
							form.addChild(frmItem);
						}
						else if(obj.name=="ofp_version"){	
							frmItem = new FormItem();
							frmItem.direction = "horizontal";
							tb3 = new ComboBox();
							tb3.dataProvider = obj.option;
							tb3.selectedIndex=0;
							frmItem.label = "OpenFlow Version";
							frmItem.addChild(tb3);
							obj.openFlowVersion = tb3.selectedLabel;
							tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
							form.addChild(frmItem);
						}
						else if(obj.name=="channel"){	
							frmItem = new FormItem();
							frmItem.direction = "horizontal";
							tb3 = new ComboBox();
							tb3.dataProvider = obj.option;
							tb3.selectedIndex=0;
							frmItem.label = "Channel";
							frmItem.addChild(tb3);
							obj.channel = tb3.selectedLabel
							tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
							form.addChild(frmItem);
						}
						else if(obj.name=="mode"){	
							frmItem = new FormItem();
							frmItem.direction = "horizontal";
							tb3 = new ComboBox();
							tb3.dataProvider = obj.option;
							tb3.selectedIndex=2;
							frmItem.label = "Mode";
							frmItem.addChild(tb3);
							obj.mode = tb3.selectedLabel;
							tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
							form.addChild(frmItem);
						}
						else if(obj.name=="openflowController"){
							frmItem = new FormItem();
							frmItem.direction = "horizontal";
							tb3 = new ComboBox();
							tb3.dataProvider = obj.option;
							tb3.selectedIndex=-1;
							frmItem.label = "Openflow Controller";
							frmItem.addChild(tb3);
							obj.openflowController=tb3.selectedLabel;
							tb3.addEventListener(Event.CHANGE,change);
							form.addChild(frmItem);
						}
						else if(obj.name=="mask"){
							frmItem = new FormItem();
							frmItem.direction = "horizontal";
							tb3 = new ComboBox();
							tb3.dataProvider = obj.option;
							tb3.selectedIndex=0;
							frmItem.label = "Mask"; 
							frmItem.addChild(tb3);
							obj.MaskAddress = tb3.selectedLabel;	
							tb3.addEventListener(FlexEvent.UPDATE_COMPLETE,change);													
							form.addChild(frmItem);
						}
					}
					
					if(i+1==objparaArrayCol.length){
						if(checkifcomputer||checkifswitchopenflow||checkifstation){
							frmItem = new FormItem();
							var button:Button = new Button();
							button.label="Apply Settings";							
							frmItem.addChild(button);
							button.addEventListener(MouseEvent.CLICK,getComboValue);
							if(testa==false)
								button.addEventListener(MouseEvent.CLICK, success);
							form.addChild(frmItem);	
						}		
					}
				}
				listnerAddHandler();
				rec = new Rectangle(0, 0, this.parent.width-this.width, this.parent.height-this.height);
			}
			
			private function getComboValue(evt:MouseEvent):void{
				this.secondTime=true;	
				second();
			}
			
			public function listnerAddHandler():void {
				this.removeEventListener(MouseEvent.CLICK,down2);
				this.removeEventListener(MouseEvent.MOUSE_UP,up2);
				this.addEventListener(MouseEvent.MOUSE_DOWN,down);
				this.addEventListener(MouseEvent.MOUSE_UP,stopdrag);
				this.addEventListener(MouseEvent.MOUSE_MOVE,mymove);
				this.removeEventListener(MouseEvent.MOUSE_MOVE,mmove);
			}
			
			public function listnerremoverHandler():void {
				this.removeEventListener(MouseEvent.MOUSE_DOWN,down);
				this.removeEventListener(MouseEvent.MOUSE_UP,stopdrag);
				this.removeEventListener(MouseEvent.MOUSE_MOVE,mymove);
				this.addEventListener(MouseEvent.MOUSE_MOVE,mmove);
				this.addEventListener(MouseEvent.CLICK,down2);
				this.addEventListener(MouseEvent.MOUSE_UP,up2);
			}
			
			public function addToStartArray(str:Object ):void {
				linesStartingArray.addItem(str);              
			}
			
			public function addToEndArray(str:Object):void {
				linesEndingArray.addItem(str);
			}
			
			public function getEndArray():ArrayCollection {
				return linesEndingArray;
			}
			
			public function getStartArray():ArrayCollection {
				return linesStartingArray;
			}
			
			private function stopdrag(eve:MouseEvent):void {
				stopDrag();
			} 
			
			private function mymove(eve:MouseEvent):void {
				var muev:Event=new Event("defaultMoveEve");
				dispatchEvent(muev);
			}
			
			private function mmove(eve:MouseEvent):void {
				var muev:MouseEvent=new MouseEvent("defaultMoveEve1");
				dispatchEvent(muev);
			}
			
			private function down(eve:MouseEvent):void {
				startDrag(false,rec);
				var muev:Event=new Event("defaultDownEve");
				dispatchEvent(muev);				
				if(confirmUpt!=false){
					regular=2;
					secondTime=true;
					second();
				}
			}
			
			private function down2(eve:MouseEvent):void {
				var muev:MouseEvent=new MouseEvent("ChangedDownEveForComponent");
				dispatchEvent(muev);
			}
			
			private function up2(eve:MouseEvent):void {
				var muev:MouseEvent=new MouseEvent("ChangedUpEveForComponent");
				dispatchEvent(muev);
			}
			
			public function setX(x:String):void {      
				this.x=int(y);       
			}
			
			public function setY(y:String):void {
				this.y=int(y);
			}				
			
			private function addChildToPanel():void {
				if (this.id == "Access Point" || this.id == "Station" || this.id == "Car"){
					var r:int = 0;
					if (this.name.slice(0,12) == "Access Point"){
						r = 100;
						circle.graphics.beginFill(0x1858FE, 0.4);
					}
					else if (this.id == "Station" || this.id == "Car"){
						r = 18;
						circle.graphics.beginFill(0x428357, 0.4);
					}						
					circle.graphics.drawCircle(0, 20, r);				
					c.addChild(circle);
					panel1.addChild(c);
				}
			}
			
			private function updateCircle():void {
				circle.graphics.clear();
				if(this.id=='Station' || this.id=='Car'){
					circle.graphics.beginFill(0x428357, 0.4);
				}
				else{
					circle.graphics.beginFill(0x1858FE, 0.4);
				}
				circle.graphics.drawCircle(0, 20, this.range);
			}
					
		]]>
	</mx:Script>
	<mx:VBox id="panel1" height="0" width="0" add="addChildToPanel()" />
	<mx:Image id="image" width="30" height="30" scaleContent="true" source="assets/{img}"/>
	<mx:Label id="lable" height="16" fontFamily="Arial" fontSize="10" fontWeight="bold" text="{test}"/>
	<mx:VBox id="can" visible="false" horizontalAlign="center" includeInLayout="false"
			 paddingBottom="10" verticalAlign="middle">
		<mx:Label height="20" fontFamily="Verdana" fontSize="12" fontWeight="bold"
				  text="{lable.text}"/>		
		<mx:HBox width="100%" horizontalAlign="center" paddingBottom="20">
			<mx:Box cornerRadius="3" borderStyle="solid" borderColor="0x5F4C0B" backgroundColor="0x5F4C0B" width="6" height="6" />
			<mx:Label fontSize="12" fontWeight="bold" text="Position"/>		
			<mx:Label fontWeight="bold" text="x:"/>
			<mx:TextInput id="positionx" width="42" change="setX(positionx.text)" editable="false"/>
			<mx:Label fontWeight="bold" text="y:"/>
			<mx:TextInput id="positiony" width="42" change="setY(positiony.text)" editable="false"/>
		</mx:HBox>
	</mx:VBox>
</mx:VBox>
